package com.ataraxia.每日一题.div2;

/**
 * @author Ataraxia
 * @create 2022/4/4 22:50
 * @description 简答题
 * 很简单的题，他说x可以整除一个光棍数，那我们就直接枚举所有光棍数就可以了，
 * 看那个光棍数能被x整除，最后输出枚举的光棍数长度和商即可。
 * 但首先通过题目我们可以看出当x为31的时候，得到的s已经相当大了，
 * 就像题目说的，s可能是一个相当大的数，那么这个光棍数肯定也是相当大的，
 * 至少long long也塞不下了，那么直接枚举光棍数就显得做不到了。
 * 这里就要用到高精度的算数了，这类是当运算数很大时，大到任何一个数据也不能塞下它时用到的算数方法。
 * 我们可以把一个数的每一位存入数组里，数组我们是可以开很大的，开到1e6也没问题，这
 * 就意味着我们能存一个1e6位的数（你可能没有概念，1亿也才9位数）。
 * 我们从长度1开始枚举光棍数，即每次往数组插入一个1，然后进行运算，
 * 如果不能整除，我们就继续往数组插入1，知道整除为止。
 * 那么高精度除法我们该怎么算，这里说的方法是一个很大的数（存入数组）除于一个小的数（正常int就能装下）。
 * 我们先把数组翻过来（不翻过来算的会很麻烦），即原本数组是1 2 3 4 5，变成5 4 3 2 1。
 * 然后我们用一个变量r每次从开头取出一个数，除去除数x，把除数结果存入数组中（此时除数可能是0，不用管他），
 * 运算一次后，r中存的就是余数，然后r乘10后再从数组取一个数加到自己身上，继续除x。
 * 当数组中所有的数都取出来之后，我们运算就结束了，此时另一个数组存的就是我们的结果，r仍然是余数。
 * 但是此时答案数组是反过来的，因为我们前面把数组反过来了，所以我们也要吧答案数组翻过来。
 * 但就像我们上面说的，前面几次的运算结果可能是0，直接翻过来答案会有问题，
 * 比如数组是0 0 1 2，直接反过来是2 1 0 0，但答案应该是21，所以我们要把前面的0删掉。
 * （但是这里翻转前后都是一样的，所以我们可以省去翻转的步骤！）
 * 我们来模拟一下这个过程：1 1 1 1 1 1除去13，然后r一开始是0，每次从数组取一个数，
 * 先取一个1，r=1，数组：1 1 1 1 1，把r/x的结果存入答案数组c中，第一次运算后，答案数组是：0，r是1；
 * 再取一个1，r=11，数组：1 1 1 1，运算后，答案数组：0 0 ，r是11；
 * 再取一个1，r=111,数组1 1 1，运算后，答案数组：0 0 8，r是7；
 * r=71,数组：1 1，运算后，答案数组：0 0 8 5，r是6；
 * r=61,数组：1，运算后，答案数组：0 0 8 5 4，r是9：
 * r=91,数组为空，运算后，答案数组：0 0 8 5 4 7
 * 然后我们把答案数组前导0去掉后，答案就是8547。其实聪明的也可以看出来了，这就是小学教的除法。
 */
public class day38_整除光棍 {
}
